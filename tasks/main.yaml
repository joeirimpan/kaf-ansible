---
# Setup kafka, zookeeper
- hosts: kafka_nodes
  become: true

  tasks:
    - name: Create kafka group
      group:
        name: '{{ kafka_group }}'
        state: present
        system: yes
      when: kafka_create_user_group
      tags:
        - kafka_group

    - name: Create kafka user
      user:
        name: '{{ kafka_user }}'
        group: '{{ kafka_group }}'
        state: present
        createhome: no
        system: yes
      when: kafka_create_user_group
      tags:
        - kafka_user

    - name: Check if Kafka has already been downloaded and unpacked
      stat:
        path: '{{ kafka_dir }}_{{ kafka_scala_version }}-{{ kafka_version }}'
      register: dir

    - name: Download Apache Kafka
      get_url:
        url: '{{ kafka_download_base_url }}/{{ kafka_version }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz'
        dest: /tmp
        validate_certs: '{{ kafka_download_validate_certs }}'
      when: not dir.stat.exists
      tags:
        - kafka_download

    - name: Unpack Apache Kafka
      unarchive:
        src: /tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
        dest: '{{ kafka_root_dir }}'
        copy: no
        group: '{{ kafka_group }}'
        owner: '{{ kafka_user }}'
      when: not dir.stat.exists
      tags:
        - kafka_unpack

    - name: Create symlink to kafka installation directory
      file:
        src: '{{ kafka_root_dir }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}'
        dest: '{{ kafka_dir }}'
        state: link
        group: '{{ kafka_group }}'
        owner: '{{ kafka_user }}'
      tags:
        - kafka_dirs

    - name: Create directory for kafka data log files
      file:
        path: '{{ item }}'
        state: directory
        group: '{{ kafka_group }}'
        owner: '{{ kafka_user }}'
        mode: 0755
      with_items: "{{ kafka_data_log_dirs.split(',') }}"
      tags:
        - kafka_dirs

    - name: Create directory for kafka application logs
      file:
        path: '{{ kafka_log_dir }}'
        state: directory
        group: '{{ kafka_group }}'
        owner: '{{ kafka_user }}'
        mode: 0755
      tags:
        - kafka_dirs

    - name: Register '{{ kafka_dir }}/logs' directory status
      stat:
        path: "{{ kafka_dir }}/logs"
      register: application_logs_dir
      tags:
        - kafka_dirs

    - name: Create symlink to application log directory
      file:
        src: "{{ kafka_log_dir }}"
        dest: "{{ kafka_dir }}/logs"
        state: link
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
        mode: 0755
        follow: no
      when: not application_logs_dir.stat.exists
      tags:
        - kafka_dirs

    - name: Create directory for zookeeper data log files
      file:
        path: '{{ item }}'
        state: directory
        group: '{{ kafka_group }}'
        owner: '{{ kafka_user }}'
        mode: 0755
      with_items: "{{ kafka_zookeeper_data_dir.split(',') }}"
      tags:
        - kafka_dirs

    - name: Create directory for symlink to kafka configuration files
      file:
        path: /etc/kafka
        state: directory
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
        mode: 0755
      tags:
        - kafka_dirs

    - name: Template configuration file to server.properties
      template:
        src: ../templates/server.properties.j2
        dest: "{{ kafka_dir }}/config/server.properties"
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
        mode: 0644
      tags:
        - kafka_config

    - name: Template configuration file to kafka_server_jaas.conf
      template:
        src: ../templates/kafka_server_jaas.conf.j2
        dest: "{{ kafka_dir }}/config/kafka_server_jaas.conf"
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
        mode: 0644
      tags:
        - kafka_config

    - name: Template configuration file to zookeeper.properties
      template:
        src: ../templates/zookeeper.properties.j2
        dest: "{{ kafka_dir }}/config/zookeeper.properties"
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
        mode: 0644
      tags:
        - kafka_config

    - name: Template configuration file to zookeeper_jaas.conf
      template:
        src: ../templates/zookeeper_jaas.conf.j2
        dest: "{{ kafka_dir }}/config/zookeeper_jaas.conf"
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
        mode: 0644
      tags:
        - kafka_config

    - name: Create symlink to kafka server properties file
      file:
        src: "{{ kafka_dir }}/config/server.properties"
        dest: /etc/kafka/server.properties
        state: link
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
      tags:
        - kafka_config

    - name: Create symlink to kafka_server_jaas.conf
      file:
        src: "{{ kafka_dir }}/config/kafka_server_jaas.conf"
        dest: /etc/kafka/kafka_server_jaas.conf
        state: link
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
      tags:
        - kafka_config

    - name: Create symlink to zookeeper server properties file
      file:
        src: "{{ kafka_dir }}/config/zookeeper.properties"
        dest: /etc/kafka/zookeeper.properties
        state: link
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
      tags:
        - kafka_config

    - name: Create symlink to zookeeper_jaas.conf
      file:
        src: "{{ kafka_dir }}/config/zookeeper_jaas.conf"
        dest: /etc/kafka/zookeeper_jaas.conf
        state: link
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
      tags:
        - kafka_config

    - name: Template kafka systemd service
      template:
        src: ../templates/kafka.service.j2
        dest: "{{ kafka_unit_path }}"
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
        mode: 0644
      when: ansible_os_family == "Debian"
      tags:
        - kafka_service

    - name: Template zookeeper systemd service
      template:
        src: ../templates/zookeeper.service.j2
        dest: "{{ zookeeper_unit_path }}"
        group: "{{ kafka_group }}"
        owner: "{{ kafka_user }}"
        mode: 0644
      when: ansible_os_family == "Debian"
      tags:
        - zookeeper_service

    - name: Install and start the zookeeper service
      service:
        name: zookeeper
        state: started
        enabled: yes
      register: zookeeper_service_status
      tags:
        - start_services

    - name: Install and start the kafka service
      service:
        name: kafka
        state: started
        enabled: yes
      when: zookeeper_service_status.changed
      tags:
        - start_services

    - name: Delete the kafka archive file
      file:
        path: /tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
        state: absent
      tags:
        - kafka_cleanup

    # - name: "DEBUG"
    #   debug:
    #     msg: "{{ kafka_create_user_group }} => {{ kafka_user }}:{{ kafka_group }}"
    #   tags:
    #     - debug
