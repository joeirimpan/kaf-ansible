---
# The Apache Kafka version to be downloaded and installed
# kafka_download_base_url should be set to https://archive.apache.org/dist/kafka/ for older versions than the current
kafka_download_base_url: https://downloads.apache.org/kafka
kafka_download_validate_certs: yes
kafka_version: 3.2.3
kafka_scala_version: 2.13

# The kafka user and group to create files/dirs with and for running the kafka service
kafka_create_user_group: true
kafka_user: kafka
kafka_group: kafka

kafka_root_dir: /opt
kafka_dir: "{{ kafka_root_dir }}/kafka"

# The application log folder (e.g: server.log)
kafka_log_dir: /var/log/kafka

# A comma separated list of directories under which to store data log files
kafka_data_log_dirs: /var/lib/kafka/data

# jaas config
jaas:
  admin:
    principal: admin
    password: <password> # tr -dc 'A-Za-z0-9' </dev/urandom | head -c 32 ; echo ''
  kafka_broker:
    principal: kafka_broker
    password: <broker_password> # tr -dc 'A-Za-z0-9' </dev/urandom | head -c 32 ; echo ''

# Kafka
kafka_broker_id: 1
kafka_sasl_enabled_mechanisms: PLAIN

# The Java heap size (memory) allocation (xmx, xms)
kafka_heap_opts: "-Xms10g -Xmx26g -XX:MetaspaceSize=96m -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=16M -XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80"
kakfa_opts: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"

zookeeper_heap_opts: "-Xmx4g"
zookeeper_opts: "-Djava.security.auth.login.config=/etc/kafka/zookeeper_jaas.conf"

# The number of threads to use for various background processing tasks
kafka_background_threads: 10

kafka_listeners:
  - "INTERNAL://:9092"
  - "BROKER://:9091"

# Hostname and port the broker will advertise to producers and consumers. If not set,
# it uses the value for "listeners" if configured.  Otherwise, it will use the value
# returned from java.net.InetAddress.getCanonicalHostName().
kafka_advertised_listeners:
  - "INTERNAL://localhost:9092"
  - "BROKER://localhost:9091"

kafka_group_initial_rebalance_delay_ms: 0

# The interval at which log segments are checked to see if they can be deleted according
# to the retention policies
kafka_log_retention_check_interval_ms: 300000

# The minimum age of a log file to be eligible for deletion
kafka_log_retention_hours: 168

# The maximum size of a log segment file. When this size is reached a new log segment will be created.
kafka_log_segment_bytes: 1073741824

# The number of background threads to use for log cleaning
kafka_log_cleaner_threads: 1

# The amount of time to sleep when there are no logs to clean
kafka_log_cleaner_backoff_ms: 15000

# The number of threads that the server uses for processing requests, which may include disk I/O
kafka_num_io_threads: 8

# Specify the number of threads that are used to replicate messages from a source broker. Increasing this value can lead to increased parallelism in I/O operations in the broker.
kafka_num_replica_fetchers: 1

# The number of threads handling network requests
kafka_num_network_threads: 3

# The default number of log partitions per topic. More partitions allow greater
# parallelism for consumption, but this will also result in more files across
# the brokers.
kafka_num_partitions: 1

# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.
# This value is recommended to be increased for installations with data dirs located in RAID array.
kafka_num_recovery_threads_per_data_dir: 1

# specifies the number of minutes to retain inactive consumer offsets in Kafka. After this time period, any offsets that have not been committed or updated will be discarded.
kafka_offset_retention_minutes: 10080

# The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"
# For anything other than development testing, a value greater than 1 is recommended for to ensure availability such as 3.
kafka_offsets_topic_replication_factor: 1
kafka_transaction_state_log_replication_factor: 1
kafka_transaction_state_log_min_isr: 1

# The send buffer (SO_SNDBUF) used by the socket server
kafka_socket_send_buffer_bytes: 102400

# The maximum size of a request that the socket server will accept (protection against OOM)
kafka_socket_request_max_bytes: 104857600

# The receive buffer (SO_RCVBUF) used by the socket server
kafka_socket_receive_buffer_bytes: 102400

# The socket receive buffer for network requests
kafka_replica_socket_receive_buffer_bytes: 65536

# Zookeeper
kafka_zookeeper_connect: "localhost:2181"

# Timeout in ms for connecting to zookeeper
kafka_zookeeper_connection_timeout_ms: 6000

kafka_zookeeper_servers:
  - "localhost:2888:3888"

kafka_zookeeper_data_dir: /var/lib/zookeeper

kafka_zookeeper_client_port: 2181

kafka_zookeeper_synclimit: 2

kafka_zookeeper_autopurge_interval: 1

kafka_zookeeper_autopurge_snap_retain_count: 10

kafka_zookeeper_init_limit: 5

kafka_zookeeper_max_client_cons: 0

kafka_zookeeper_admin_enableserver: false

# Enables delete topic. Delete topic through the admin tool will have no
# effect if this config is turned off
kafka_delete_topic_enable: true

# Enable auto creation of topic on the server
kafka_auto_create_topics_enable: false

kafka_unit_path: /lib/systemd/system/kafka.service
zookeeper_unit_path: /lib/systemd/system/zookeeper.service

# Kaf config
kaf_kakfa_servers:
  - "localhost:9092"